class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        map<int,int>count;
        set<int>res;
        vector<int>result;
        int ele;
        for(int i=0;i<nums.size();i++)
        {
            if(count.find(nums[i]) == count.end())
            {
                count[nums[i]] = 1;
            }
            else
            {
                ele = count[nums[i]];
                ele++;
                count[nums[i]] = ele;
            }
        }
        priority_queue<pair<int,int>>pq;
        int freq;
        int val;
        for(auto it = count.begin() ; it!= count.end() ;it++)
        {
            val = it->first;
            freq = it->second;
            pq.push(make_pair(freq,val));
            // result.push_back(val);
        }
        pair<int,int>t;
        while(k--)
        {
            t = pq.top();
            pq.pop();
            result.push_back(t.second);
        }
        return result;
        
    }
};
