#include<deque>
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int>dq;
        vector<int>temp;
        if(nums.size() == 0)
            return nums;
        else if(nums.size() == 1)
            return nums;
        else if(k == 1)
            return nums;
        for(int i=0;i<k;i++)
        {
            while(!dq.empty() && nums[i] >= nums[dq.back()])
            {
                cout<<nums[i]<<" "<<nums[dq.back()]<<endl;
                 dq.pop_back();
            }
               
            dq.push_back(i);
            //cout<<i<<endl;
        }
        temp.push_back(nums[dq.front()]);
        for(int i=k;i<nums.size();i++)
        {
            if(!dq.empty())
            {
                while(!dq.empty() && i - dq.front()>= k)
                    dq.pop_front();
            }
            while(!dq.empty() && nums[i]>= nums[dq.back()])
                dq.pop_back();
            dq.push_back(i);
            temp.push_back(nums[dq.front()]);
        }
        return temp;
        
        
    }
    
};
