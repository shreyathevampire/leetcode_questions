/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool check(TreeNode *s, TreeNode *t)
    {
        if(s && t)
        {
            if(s->val != t->val)
                return false;
            cout<<s->val<<endl;
            return(check(s->left,t->left) && check(s->right,t->right));
        }
        else if(t==NULL && s==NULL)
            return true;
        else
            return false;
        
        
        
    }
    bool isSubtree(TreeNode* s, TreeNode* t) {
        bool res=true;
      if(s && t)
      {
          if(s->val == t->val)
          {
               cout<<s->val<<endl;
               res = check(s,t);
              if(res == true)
                  return res;
              
          }
         
              return(isSubtree(s->left,t) || isSubtree(s->right,t));
         
      }
        return false;
    }
};
