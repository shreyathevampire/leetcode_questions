class Solution {
public:
    void printArr(vector<vector<int>>& grid)
    {
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
                cout<<grid[i][j]<<" ";
            }
            cout<<endl;
        }
    }
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        for(int i=1;i<grid[0].size();i++)
        {
            grid[0][i] = grid[0][i] + grid[0][i-1];
        }
        //printArr(grid);
        for(int i=1;i<grid.size();i++)
        {
            grid[i][0] = grid[i][0] + grid[i-1][0];
        }
        // printArr(grid);
        for(int i=1;i<grid.size();i++)
        {
            for(int j=1;j<grid[0].size();j++)
            {
                grid[i][j]= grid[i][j] + min(grid[i-1][j],grid[i][j-1]);
            }
        }
        printArr(grid);
        return(grid[m-1][n-1]);
    }
};
